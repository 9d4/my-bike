#include <server.h>
#include <LittleFS.h>

const char* PARAM_INPUT_1 = "target";
const char* PARAM_INPUT_2 = "state";

const char index_html[] PROGMEM = R"rawliteral(
<!DOCTYPE HTML>
<html>
<head>
  <title>traperbike</title>
  <meta name="viewport" content="width=device-width,initial-scale=1,user-scalable=no">
  <style>
    html {font-family: system-ui;display: inline-block;text-align: center}
    body {margin: 0;padding: 16px;background-color: #080808;color: ghostwhite}
    h3 {margin-bottom:1rem;}
    button {margin-bottom:.85rem;width:100%%;}
    main {display: grid;align-content: center;justify-content: center;justify-items: center}
    .pushable {background: #19607c;border: none;border-radius: 12px;padding: 0;cursor: pointer;outline-offset: 4px}
    .front {display: block;padding: 8px 34px;border-radius: 12px;font-size: 1.15rem;background: rgb(0, 152, 240);color: #fff;transform: translateY(-6px)}
    .pushable:active .front {transform: translateY(-2px)}
    .pushable.dgr {background: hsl(340deg 100%% 32%%)}
    .pushable.dgr .front {background: hsl(345deg 100%% 47%%)}
    .switch {position: relative;display: inline-block;width: 120px;height: 68px}
    .switch input {display: none}
    .slider {position: absolute;top: 0;left: 0;right: 0;bottom: 0;background-color: #ccc;border-radius: 6px}
    .slider:before {position: absolute;content: "";height: 52px;width: 52px;left: 8px;bottom: 8px;background-color: #fff;-webkit-transition: .4s;transition: .4s;border-radius: 3px}
    input:checked+.slider {background-color: #2e81b1;}
    input:checked+.slider:before {-webkit-transform: translateX(52px);-ms-transform: translateX(52px);transform: translateX(52px)}
  </style>
</head>
<body>
  <main>
    <h2>traperbike</h2>
    %COMPONENTS%
  </main>
  <script>function toggleCheckbox(element) {
      var xhr = new XMLHttpRequest();
      var target = element.getAttribute("data-target");
      var state = element.checked ? 1 : 0;
      var uri = `/update?target=${target}&state=${state}`;
      xhr.open("GET", uri, true);
      xhr.send();
    }
  function trigger(element) {
    var target = element.getAttribute("data-target");
    var xhr = new XMLHttpRequest();
    xhr.open("GET", `/trig?target=${target}`, true);
    xhr.send();
  }
  function reboot() {
    var xhr = new XMLHttpRequest();
    xhr.open("POST", "/reboot", true);
    xhr.send();
  }
  </script>
</body>
</html>
)rawliteral";

// // html form change password for wifi and web auth
// const char change_pass_html[] PROGMEM = R"rawliteral(
// <!DOCTYPE HTML>
// <html>
// <head>
//   <title>traperbike</title>
//   <meta name="viewport" content="width=device-width,initial-scale=1,user-scalable=no">
//   <style>
//     html {font-family: system-ui;display: inline-block;text-align: center}
//     body {margin: 0;padding: 16px;background-color: #080808;color: ghostwhite}
//     h3 {margin-bottom:1rem;}
//     button {margin-bottom:.85rem;width:100%%;}
//     main {display: grid;align-content: center;justify-content: center;justify-items: center}
//     .pushable {background: #19607c;border: none;border-radius: 12px;padding: 0;cursor: pointer;outline-offset: 4px}
//     .front {display: block;padding: 8px 34px;border-radius: 12px;font-size: 1.15rem;background: rgb(0, 152, 240);color: #fff;transform: translateY(-6px)}
//     .pushable:active .front {transform: translateY(-2px)}
//     .pushable.dgr {background: hsl(340deg 100%% 32%%)}
//     .pushable.dgr .front {background: hsl(345deg 100%% 47%%)}
//     .switch {position: relative;display: inline-block;width: 120px;height: 68px}
//     .switch input {display: none}
//     .slider {position: absolute;top: 0;left: 0;right: 0;bottom: 0;background-color: #ccc;border-radius: 6px}
//     .slider:before {position: absolute;content: "";height: 52px;width: 52px;left: 8px;bottom: 8px;background-color: #fff;-webkit-transition: .4s;transition: .4s;border-radius: 3px}
//     input:checked+.slider {background-color: #2e81b1;}
//     input:checked+.slider:before {-webkit-transform: translateX(52px);-ms-transform: translateX(52px);transform: translateX(52px)}
//   </style>
// </head>
// <body>
//   <main>
//     <h2>traperbike</h2>
//     <form action="/changepass" method="post">
//       <h3>Change password</h3>
//       <input type="password" name="newpass" placeholder="New password" required>
//       <input type="password" name="newpass2" placeholder="Repeat new password" required>
//       <input type="submit" value="Change">


const uint8_t favicon_ico[] PROGMEM = {0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A, 0x00, 0x00, 0x00, 0x0D, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x08, 0x06, 0x00, 0x00, 0x00, 0xE2, 0x98, 0x77, 
0x38, 0x00, 0x00, 0x00, 0x04, 0x67, 0x41, 0x4D, 0x41, 0x00, 0x00, 0xB1, 0x8F, 0x0B, 0xFC, 0x61, 
0x05, 0x00, 0x00, 0x00, 0x01, 0x73, 0x52, 0x47, 0x42, 0x00, 0xAE, 0xCE, 0x1C, 0xE9, 0x00, 0x00, 
0x00, 0x20, 0x63, 0x48, 0x52, 0x4D, 0x00, 0x00, 0x7A, 0x26, 0x00, 0x00, 0x80, 0x84, 0x00, 0x00, 
0xFA, 0x00, 0x00, 0x00, 0x80, 0xE8, 0x00, 0x00, 0x75, 0x30, 0x00, 0x00, 0xEA, 0x60, 0x00, 0x00, 
0x3A, 0x98, 0x00, 0x00, 0x17, 0x70, 0x9C, 0xBA, 0x51, 0x3C, 0x00, 0x00, 0x00, 0x06, 0x62, 0x4B, 
0x47, 0x44, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xA0, 0xBD, 0xA7, 0x93, 0x00, 0x00, 0x00, 0x09, 
0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x48, 0x00, 0x46, 0xC9, 0x6B, 
0x3E, 0x00, 0x00, 0x0F, 0x17, 0x49, 0x44, 0x41, 0x54, 0x78, 0xDA, 0xED, 0x9D, 0x6B, 0x8C, 0x1C, 
0x57, 0x56, 0xC7, 0x7F, 0xB7, 0xAA, 0xDF, 0x8F, 0x79, 0xDB, 0x3B, 0xE3, 0x19, 0xC7, 0x63, 0xC7, 
0x89, 0xD7, 0x8E, 0x97, 0x78, 0x97, 0xB0, 0x64, 0x17, 0xEF, 0x3A, 0x20, 0x81, 0xF6, 0xC3, 0x2E, 
0x68, 0x63, 0x02, 0xC8, 0x22, 0x80, 0xD0, 0x8A, 0x97, 0x10, 0x1F, 0x96, 0x97, 0x04, 0xE2, 0xFD, 
0x01, 0xD0, 0x0A, 0x09, 0xB1, 0x08, 0x10, 0xF0, 0x65, 0x97, 0xC8, 0x12, 0xA0, 0x40, 0x20, 0xAB, 
0x48, 0x8B, 0x10, 0xE0, 0x0D, 0x09, 0x44, 0xF6, 0xB2, 0xCE, 0xC3, 0xF1, 0x2B, 0x8E, 0x63, 0x3C, 
0xF6, 0x8C, 0x27, 0x33, 0xD3, 0xF3, 0xE8, 0x67, 0x75, 0x75, 0x5D, 0x3E, 0x9C, 0xEE, 0xA9, 0x9E, 
0xF1, 0x74, 0x77, 0xF5, 0xA3, 0xBA, 0x7A, 0x4C, 0xFE, 0x52, 0x69, 0x1E, 0xDD, 0x55, 0x75, 0xEF, 
0xFF, 0xDC, 0x7B, 0xEE, 0xB9, 0xE7, 0x9E, 0x7B, 0xAE, 0x62, 0x50, 0x70, 0xF6, 0x54, 0xED, 0xB7, 
0x30, 0x30, 0x0A, 0xEC, 0x07, 0x1E, 0xA9, 0x5E, 0x47, 0x80, 0x29, 0x60, 0x16, 0x18, 0x01, 0x42, 
0x40, 0xA4, 0xFA, 0x5D, 0x80, 0x32, 0x60, 0x01, 0x36, 0x90, 0x01, 0xDE, 0x03, 0xE6, 0x81, 0xAB, 
0xC0, 0xF5, 0xEA, 0x75, 0x1B, 0x58, 0xAD, 0x7E, 0x17, 0xCE, 0x9C, 0x0B, 0xBA, 0xC6, 0x00, 0xA8, 
0x40, 0xDF, 0x2E, 0xA4, 0x2B, 0x20, 0x0D, 0x1C, 0x02, 0x4E, 0x00, 0x1F, 0x07, 0x8E, 0x21, 0x64, 
0x8F, 0x01, 0x31, 0x5C, 0xA2, 0xDB, 0x45, 0x19, 0x28, 0x00, 0x2B, 0x88, 0x50, 0x2E, 0x01, 0xE7, 
0x81, 0x8B, 0xC0, 0xBB, 0x40, 0x16, 0xD0, 0x41, 0x0A, 0xA3, 0xFF, 0x02, 0x38, 0x7B, 0xAA, 0xFA, 
0x5A, 0x9D, 0x00, 0x8E, 0x02, 0x4F, 0x55, 0xAF, 0x13, 0xC0, 0x1E, 0x20, 0xEA, 0x73, 0x09, 0x4A, 
0xC0, 0x22, 0x22, 0x84, 0x7F, 0x07, 0xFE, 0x03, 0xB8, 0x8A, 0xD6, 0x79, 0x94, 0xEA, 0x7B, 0xCF, 
0xE8, 0x9F, 0x00, 0xDC, 0xD6, 0xFE, 0x21, 0x84, 0xF0, 0xEF, 0x07, 0x4E, 0x02, 0xFB, 0x00, 0xB3, 
0xAF, 0xB5, 0x76, 0x61, 0x03, 0x77, 0x81, 0xFF, 0x04, 0xFE, 0x09, 0x38, 0x87, 0x08, 0xA7, 0x6F, 
0xBD, 0xC2, 0x7F, 0x01, 0xB8, 0xC4, 0x3F, 0x84, 0x90, 0xFE, 0x43, 0xC0, 0x47, 0x81, 0x64, 0x5F, 
0x6A, 0xE8, 0x1D, 0x59, 0xE0, 0x9B, 0xC0, 0xDF, 0x03, 0x2F, 0x22, 0x63, 0x86, 0xEF, 0x82, 0xF0, 
0x4F, 0x00, 0xEE, 0xA0, 0x3A, 0x0D, 0x9C, 0x06, 0x7E, 0x14, 0x78, 0x1C, 0x19, 0x3C, 0x07, 0x19, 
0x16, 0xA2, 0x9E, 0xFE, 0x06, 0x78, 0x1E, 0x19, 0xCC, 0x7D, 0x53, 0x4D, 0xBD, 0x17, 0x80, 0x4B, 
0x7C, 0x1A, 0xF8, 0x2C, 0xF0, 0x33, 0xC0, 0x77, 0xE2, 0xBF, 0x6E, 0xEF, 0x35, 0x4A, 0xC0, 0xAB, 
0xC0, 0x5F, 0x00, 0x2F, 0x21, 0x3D, 0xA4, 0xE7, 0x82, 0xE8, 0xAD, 0x00, 0x84, 0x7C, 0x03, 0x19, 
0x50, 0x7F, 0x01, 0xF8, 0x3C, 0x30, 0xE4, 0x2F, 0x4F, 0xBE, 0x63, 0x15, 0xF8, 0x07, 0xE0, 0x4F, 
0x80, 0x37, 0x01, 0xA7, 0x97, 0x42, 0xE8, 0x9D, 0x00, 0x84, 0xFC, 0x34, 0xF0, 0x23, 0xC0, 0x17, 
0x11, 0xDB, 0x3D, 0x58, 0x33, 0xB7, 0x77, 0xD0, 0xC0, 0x65, 0xE0, 0x8F, 0x80, 0xBF, 0x03, 0xB2, 
0xBD, 0x12, 0x42, 0xF7, 0x04, 0xB9, 0x2A, 0xE7, 0x10, 0xF0, 0xAB, 0xC0, 0x19, 0x20, 0x15, 0x00, 
0x49, 0xFD, 0xC0, 0x3A, 0xF0, 0x1C, 0xF0, 0x25, 0x64, 0x5E, 0xD1, 0xB5, 0x4A, 0xEA, 0x4E, 0x00, 
0xAE, 0x85, 0xF3, 0x49, 0xE0, 0xF7, 0x80, 0x53, 0x88, 0x0A, 0x7A, 0x90, 0x51, 0x41, 0xE6, 0x0F, 
0xBF, 0x09, 0xFC, 0x37, 0x5D, 0x5A, 0x4A, 0x9D, 0xDB, 0xDF, 0x42, 0x7E, 0x08, 0xD1, 0xF3, 0x7F, 
0x0C, 0x7C, 0x07, 0x83, 0xAE, 0x72, 0x7A, 0x53, 0x3A, 0x03, 0xE9, 0xED, 0x4F, 0x02, 0x73, 0xC0, 
0x3B, 0x9C, 0x9E, 0xD5, 0x3C, 0x7F, 0xAB, 0xA3, 0x87, 0x75, 0x26, 0x00, 0x21, 0x3F, 0x02, 0xFC, 
0x18, 0xF0, 0x87, 0xD5, 0x02, 0x0D, 0x3C, 0xCC, 0x7C, 0x08, 0xA5, 0x15, 0xDA, 0xD4, 0xBD, 0x78, 
0xDC, 0x5E, 0x64, 0x22, 0x99, 0x01, 0xDE, 0xE6, 0xF4, 0x6C, 0xA5, 0x13, 0x21, 0xB4, 0x2F, 0x00, 
0x21, 0x3F, 0x0A, 0xFC, 0x14, 0xA2, 0x76, 0x26, 0xFD, 0xA3, 0xAC, 0x47, 0xD0, 0x10, 0x5D, 0x48, 
0x32, 0x74, 0x61, 0x0A, 0x27, 0x5A, 0xC1, 0x1E, 0x2D, 0xD2, 0xA3, 0xEE, 0x30, 0x8C, 0xA8, 0xDF, 
0x75, 0xE0, 0x8D, 0x4E, 0x84, 0xD0, 0x9E, 0xBE, 0x76, 0x5B, 0xFE, 0x17, 0x80, 0xDF, 0x41, 0x7C, 
0x37, 0xED, 0x43, 0x01, 0x4A, 0xCB, 0x55, 0x25, 0x68, 0xF3, 0xA2, 0xEE, 0xB3, 0x6E, 0x39, 0x52, 
0xA0, 0x2A, 0x8A, 0xC4, 0xB5, 0x31, 0x46, 0x5E, 0x99, 0x21, 0xBA, 0x90, 0x44, 0x55, 0x7A, 0x3E, 
0x44, 0xED, 0x01, 0x7E, 0x17, 0xF8, 0x49, 0x20, 0x5C, 0x67, 0x94, 0x78, 0xA6, 0xC2, 0x1B, 0xE4, 
0xC1, 0x26, 0xF0, 0x13, 0xC0, 0xEF, 0xD3, 0x09, 0xF9, 0x0A, 0x70, 0xC0, 0xCC, 0x87, 0x09, 0xAD, 
0x45, 0x31, 0xB3, 0x11, 0xC2, 0xEB, 0x11, 0xA8, 0xB8, 0xC5, 0xD0, 0xA6, 0xC6, 0x1E, 0xB2, 0xB0, 
0x87, 0x4A, 0xD8, 0xC3, 0x25, 0x9C, 0x98, 0x2D, 0xCD, 0xA4, 0x5D, 0xAD, 0xA1, 0xC0, 0xC8, 0x87, 
0x48, 0xBD, 0x3D, 0x4E, 0xE2, 0xEA, 0x38, 0xA6, 0x65, 0xA2, 0x4D, 0x87, 0xCC, 0xC9, 0x39, 0x0A, 
0x87, 0x56, 0x41, 0xF7, 0x7C, 0xB8, 0x5A, 0x04, 0x7E, 0x05, 0xB1, 0x92, 0x2A, 0x5E, 0x07, 0x66, 
0x6F, 0xA5, 0x70, 0xAD, 0x9D, 0xCF, 0x23, 0x13, 0x92, 0xE9, 0x4E, 0x4A, 0x18, 0xCE, 0x44, 0x89, 
0xBF, 0x3B, 0x42, 0xF4, 0x6E, 0x8A, 0xD0, 0x46, 0x04, 0x65, 0x1B, 0x28, 0xE7, 0xFE, 0x22, 0x68, 
0x43, 0xA3, 0x23, 0x0E, 0xE5, 0x74, 0x89, 0xD2, 0xBE, 0x2C, 0x85, 0xD9, 0xF5, 0xAA, 0xDA, 0xF0, 
0x08, 0x05, 0xE1, 0xE5, 0x18, 0xE9, 0x8B, 0x7B, 0x89, 0xCD, 0xA5, 0xE5, 0x1D, 0x4A, 0x9E, 0xEB, 
0xA3, 0x00, 0x00, 0xFE, 0x17, 0xF8, 0x79, 0xC4, 0x97, 0xE4, 0xC9, 0x44, 0x6D, 0x5D, 0x0A, 0xB7, 
0x4B, 0x7D, 0x17, 0xF0, 0xD7, 0xC0, 0x87, 0xDB, 0x2A, 0x92, 0x02, 0x55, 0x36, 0x88, 0xDF, 0x18, 
0x21, 0x75, 0x79, 0x9C, 0xF0, 0x5A, 0x54, 0x5A, 0xB3, 0x97, 0xFA, 0x6B, 0xE1, 0xA9, 0x3C, 0x52, 
0x24, 0x7B, 0x7C, 0x89, 0xE2, 0xC1, 0x35, 0xB4, 0xA1, 0x9B, 0xBF, 0xCB, 0x81, 0xE8, 0x5C, 0x9A, 
0xF4, 0xC5, 0xBD, 0x44, 0x96, 0xE3, 0x5B, 0xDE, 0xD3, 0x07, 0x01, 0x80, 0xAC, 0x39, 0x7C, 0x01, 
0x31, 0x51, 0x5B, 0x0A, 0xA1, 0xB9, 0x42, 0x74, 0xC9, 0x3F, 0x88, 0xE8, 0xB9, 0xB6, 0xC9, 0x37, 
0x4A, 0x26, 0xE9, 0x6F, 0xED, 0x65, 0xF8, 0xC2, 0x24, 0xE1, 0xD5, 0xE8, 0xE6, 0xFF, 0xBD, 0xDE, 
0xAF, 0x80, 0x48, 0x26, 0xC6, 0xF0, 0xF9, 0x49, 0x62, 0x37, 0x87, 0x9A, 0x7E, 0xD7, 0xB0, 0x0C, 
0x92, 0x97, 0x26, 0x18, 0xF9, 0xAF, 0xE9, 0xFB, 0xC8, 0xEF, 0x23, 0x1E, 0x03, 0x7E, 0x1B, 0xF1, 
0xFE, 0xB6, 0x84, 0x97, 0x11, 0x29, 0x8D, 0xE8, 0xB6, 0xA7, 0xDA, 0x2E, 0x4A, 0x45, 0x91, 0xB8, 
0x32, 0x46, 0xEA, 0xCA, 0x38, 0x46, 0xD9, 0xE8, 0x9C, 0x10, 0x05, 0x66, 0x31, 0x44, 0xFA, 0xCD, 
0xBD, 0x84, 0x57, 0x62, 0xF7, 0x3F, 0x47, 0x81, 0xB9, 0x11, 0x26, 0x7D, 0x61, 0x92, 0xA1, 0x8B, 
0x7B, 0x31, 0xF3, 0xA1, 0xA0, 0x67, 0x24, 0xDF, 0x0B, 0xFC, 0x12, 0x90, 0x6C, 0x35, 0x28, 0x37, 
0x16, 0x80, 0xAB, 0xF7, 0x7F, 0x18, 0x71, 0x2F, 0xB4, 0x67, 0x3E, 0x28, 0x88, 0xDE, 0x4B, 0x90, 
0xBC, 0x32, 0x86, 0xAA, 0xA8, 0x9E, 0x58, 0x34, 0xE1, 0xB5, 0x28, 0xF1, 0x77, 0x46, 0xE5, 0x79, 
0x75, 0x88, 0xDC, 0x4B, 0x30, 0xF2, 0xCA, 0x34, 0xC9, 0x6B, 0x63, 0x62, 0xE5, 0x04, 0x3F, 0x1D, 
0x34, 0x90, 0x39, 0xD2, 0x0F, 0x02, 0xAA, 0x99, 0x10, 0x76, 0x26, 0xD5, 0xBD, 0xE1, 0x71, 0xC4, 
0xB1, 0xD6, 0xB6, 0x47, 0x53, 0x59, 0x06, 0x89, 0xAB, 0xE3, 0x84, 0xF2, 0xE1, 0xDE, 0x11, 0xA2, 
0x21, 0x7E, 0x3B, 0x4D, 0x68, 0x2D, 0x02, 0x86, 0x46, 0x39, 0x8A, 0xF8, 0xBB, 0xC3, 0x8C, 0xBC, 
0x3A, 0x4D, 0x6C, 0x3E, 0xE5, 0xED, 0x35, 0xFE, 0xE9, 0xFE, 0xED, 0x18, 0x06, 0x7E, 0x11, 0x38, 
0x0E, 0xD0, 0x48, 0x08, 0xCD, 0x5A, 0x75, 0x1A, 0x71, 0x29, 0x1F, 0x6D, 0xFB, 0xD5, 0x4A, 0x13, 
0x5E, 0x8E, 0x13, 0x5D, 0x48, 0x78, 0x20, 0xA4, 0xFE, 0x52, 0xCD, 0xCD, 0x4D, 0x05, 0x66, 0x2E, 
0x4C, 0xE4, 0x5E, 0x12, 0xA3, 0x18, 0x22, 0xF5, 0xC6, 0x1E, 0x86, 0x5F, 0xDB, 0x27, 0x63, 0x4B, 
0x2B, 0x5E, 0x35, 0x38, 0xA6, 0x83, 0x13, 0xAE, 0xF4, 0x88, 0x5F, 0x4F, 0x38, 0x8E, 0x58, 0x45, 
0x0D, 0x57, 0xFF, 0xEE, 0x9F, 0x09, 0xBB, 0x92, 0x7A, 0x1A, 0xF8, 0x65, 0x24, 0x2A, 0xA1, 0x4D, 
0x28, 0xE2, 0x37, 0x46, 0x88, 0xDF, 0x19, 0x6A, 0x4A, 0x8C, 0x36, 0x34, 0xD6, 0xDE, 0x02, 0x85, 
0x83, 0x6B, 0x94, 0xA6, 0x72, 0xD8, 0x29, 0x0B, 0xA3, 0x6C, 0x62, 0x94, 0x1B, 0x4F, 0xD0, 0x95, 
0x56, 0x28, 0xDB, 0x20, 0x32, 0x9F, 0x24, 0x71, 0x7D, 0x0C, 0xD3, 0xCB, 0xD8, 0xA2, 0xC1, 0x4E, 
0x94, 0xC9, 0x7E, 0x64, 0x89, 0xE2, 0x81, 0xF5, 0x7E, 0xBA, 0x0B, 0x15, 0xE2, 0xA6, 0xB9, 0x0C, 
0x5C, 0xE6, 0xF4, 0x2C, 0xDB, 0x67, 0xCA, 0xA1, 0x06, 0x37, 0x4E, 0x23, 0x2B, 0x59, 0xC3, 0x1D, 
0xBD, 0xD5, 0x56, 0x44, 0x56, 0xE2, 0xD2, 0xA2, 0xD5, 0xCE, 0x4D, 0x5A, 0x1B, 0x9A, 0xDC, 0x91, 
0x15, 0xB2, 0xC7, 0xDF, 0xA7, 0x92, 0xB0, 0xE5, 0x3E, 0x47, 0x11, 0x5E, 0x4C, 0x30, 0x7C, 0x61, 
0x52, 0xAC, 0x98, 0x06, 0x55, 0x8A, 0x2C, 0x26, 0xDD, 0xC7, 0x7A, 0xD0, 0x28, 0xD6, 0x78, 0x81, 
0xF5, 0x8F, 0x2E, 0x52, 0x9A, 0xDE, 0x08, 0x62, 0x7C, 0x18, 0xAD, 0x72, 0xF9, 0x0A, 0xB0, 0xB0, 
0xFD, 0xC3, 0xAD, 0x6D, 0xE1, 0xEC, 0x29, 0xAA, 0x3A, 0xE0, 0x69, 0xE0, 0x13, 0x1D, 0xBD, 0x4E, 
0x81, 0x51, 0x0A, 0x11, 0x5A, 0x8F, 0xD0, 0x50, 0x9F, 0x68, 0x28, 0x4E, 0x6F, 0xB0, 0xF1, 0xF8, 
0x22, 0x95, 0x64, 0xD9, 0xFD, 0xB7, 0xA1, 0xB1, 0xA6, 0xB2, 0xAC, 0x3F, 0xB1, 0x80, 0x9D, 0x2C, 
0x37, 0xBC, 0x5D, 0x79, 0x99, 0x15, 0x6B, 0xD0, 0x4A, 0x93, 0x3F, 0xB0, 0xCE, 0xEA, 0xC9, 0x3B, 
0x94, 0x66, 0x02, 0x21, 0xBF, 0x86, 0x4F, 0x01, 0x4F, 0x33, 0x35, 0x75, 0xDF, 0x58, 0xB0, 0x43, 
0x67, 0x54, 0xB3, 0xC0, 0xB3, 0x74, 0xBC, 0x78, 0xAE, 0x31, 0x2C, 0x13, 0xC3, 0x6A, 0xAC, 0x46, 
0x74, 0x48, 0x53, 0x3C, 0xB0, 0x2E, 0x6E, 0x86, 0xED, 0x83, 0xA2, 0x56, 0x94, 0x3E, 0x94, 0xA7, 
0xB8, 0x7F, 0xBD, 0xF3, 0xEA, 0x6A, 0x70, 0xA2, 0x15, 0xB2, 0xC7, 0x97, 0x58, 0x7B, 0xF2, 0x2E, 
0xE5, 0xB1, 0x36, 0x66, 0xD1, 0xFE, 0x20, 0x0A, 0x3C, 0xCB, 0xFC, 0xFC, 0xFE, 0xED, 0x1F, 0xB8, 
0x02, 0x38, 0x7B, 0x0A, 0x94, 0x02, 0x09, 0x1D, 0x39, 0xD1, 0xCD, 0xDB, 0x8C, 0x62, 0x08, 0x65, 
0x37, 0xD0, 0xCD, 0x1A, 0x9C, 0x48, 0x85, 0xF2, 0x48, 0x13, 0x52, 0x0C, 0x87, 0xD2, 0x64, 0x0E, 
0x1D, 0x72, 0xDA, 0x7F, 0xB9, 0x86, 0xF2, 0xB0, 0xC5, 0xDA, 0x13, 0x0B, 0x6C, 0x3C, 0xBE, 0x88, 
0x13, 0xB7, 0xDB, 0xF7, 0x23, 0xF9, 0x83, 0x8F, 0x01, 0x9F, 0x03, 0xB6, 0xF4, 0x82, 0xAD, 0x3D, 
0x40, 0xEB, 0x29, 0xE0, 0x19, 0x3A, 0x0F, 0x05, 0xDC, 0x9C, 0xFD, 0x2A, 0xBB, 0xF1, 0x48, 0xE7, 
0x44, 0x6D, 0x9C, 0x58, 0x85, 0x66, 0x3A, 0x41, 0x47, 0x2A, 0xE8, 0x0E, 0x06, 0xCB, 0xE2, 0xBE, 
0x2C, 0xAB, 0x27, 0xE7, 0xC8, 0x3F, 0x92, 0x11, 0xBF, 0xFF, 0x60, 0x90, 0x0F, 0xA2, 0x51, 0x9E, 
0x41, 0xD6, 0x11, 0x36, 0x21, 0x55, 0x74, 0x25, 0xF2, 0x14, 0x22, 0x29, 0x1F, 0xA1, 0xE4, 0xAD, 
0x9E, 0x14, 0xB9, 0x47, 0x68, 0xD0, 0xA6, 0x43, 0xF6, 0xC8, 0x0A, 0xAB, 0x9F, 0xBC, 0x83, 0xB5, 
0x37, 0xEF, 0x6F, 0x15, 0x3A, 0xC7, 0x13, 0xC0, 0xA7, 0x01, 0x38, 0x2B, 0x3F, 0xEA, 0xDB, 0x58, 
0x02, 0x51, 0x3F, 0x1E, 0x8C, 0xF7, 0x01, 0x82, 0x06, 0x3B, 0x59, 0x66, 0xED, 0x63, 0xF7, 0x58, 
0xFF, 0xF6, 0x05, 0x2A, 0xE9, 0xF2, 0x20, 0xB5, 0xFA, 0xED, 0x48, 0x21, 0x1C, 0x6F, 0x3A, 0xAA, 
0xEA, 0x05, 0x70, 0x14, 0xF1, 0x78, 0xEE, 0x2A, 0x58, 0x13, 0x05, 0xD6, 0x9E, 0xBC, 0x4B, 0xEE, 
0xE8, 0x32, 0x3A, 0xEC, 0x0C, 0x32, 0xF9, 0x35, 0x7C, 0x0A, 0x09, 0xD9, 0x01, 0xC0, 0xA8, 0x53, 
0x3F, 0xA7, 0x90, 0x40, 0xD9, 0x5D, 0x01, 0x6D, 0x68, 0xF2, 0x0F, 0xAD, 0x91, 0x39, 0x39, 0x47, 
0xF1, 0xA1, 0x40, 0x4D, 0xCC, 0x76, 0x31, 0x83, 0x08, 0x01, 0xCE, 0x9E, 0xDA, 0xEC, 0x01, 0x43, 
0xC0, 0x77, 0x13, 0x5C, 0x94, 0x72, 0x7B, 0x50, 0x90, 0x7B, 0x74, 0x85, 0xB5, 0x4F, 0xDC, 0xC5, 
0x1E, 0x2D, 0xED, 0x86, 0x56, 0x5F, 0x8F, 0x10, 0xC2, 0x75, 0x0A, 0x5C, 0x15, 0x74, 0x10, 0x71, 
0xBC, 0xF5, 0x0F, 0xAA, 0xC3, 0xCF, 0x90, 0x09, 0x96, 0x35, 0x99, 0xC7, 0x49, 0x0C, 0x8C, 0x89, 
0xD9, 0x2E, 0x4E, 0x00, 0x07, 0xC0, 0x75, 0x45, 0x9C, 0x60, 0x9B, 0x79, 0xE4, 0x2B, 0x34, 0x28, 
0xCB, 0x44, 0x85, 0x1C, 0xD4, 0x0E, 0xDE, 0x49, 0x6D, 0xE8, 0xA6, 0x66, 0x2C, 0xC8, 0x2A, 0x9B, 
0xB2, 0xCC, 0x1D, 0x97, 0x34, 0x7B, 0x52, 0x44, 0xA5, 0x65, 0x1E, 0xE2, 0xCF, 0xE3, 0xA7, 0x10, 
0xCE, 0x2F, 0x85, 0x10, 0x9B, 0xFF, 0xE3, 0xF4, 0x2B, 0x7A, 0x59, 0x69, 0xCC, 0x6C, 0x84, 0x91, 
0x57, 0xA7, 0xA1, 0xC9, 0xF2, 0xA2, 0x61, 0x99, 0x18, 0xB6, 0x6A, 0xF0, 0x08, 0x45, 0xEA, 0xD2, 
0x38, 0x89, 0x1B, 0x23, 0xBE, 0x15, 0x53, 0x1B, 0x9A, 0xEC, 0xB1, 0x25, 0x4A, 0x33, 0x59, 0x3F, 
0x7A, 0x59, 0x0C, 0x31, 0x49, 0xFF, 0x36, 0x84, 0x6C, 0x7A, 0x3B, 0xE6, 0x5B, 0x4D, 0x76, 0x80, 
0x51, 0x36, 0x88, 0xDE, 0x6B, 0xB5, 0x3F, 0xA3, 0x49, 0x58, 0x8A, 0x86, 0x70, 0x26, 0x86, 0xAF, 
0x23, 0x6F, 0x95, 0xF4, 0xF2, 0x58, 0xD1, 0x2F, 0x55, 0x77, 0x1C, 0x18, 0x32, 0x90, 0xDD, 0x88, 
0xB3, 0xFE, 0xD5, 0xA4, 0x01, 0x36, 0x63, 0x7F, 0x1A, 0x5D, 0xAD, 0xEE, 0xF7, 0xF2, 0x8C, 0x2E, 
0x2E, 0x43, 0x13, 0x5D, 0x48, 0x92, 0x78, 0x67, 0x14, 0x3A, 0xF0, 0x88, 0x78, 0xC0, 0x41, 0x60, 
0xC6, 0x00, 0x0E, 0x23, 0xBB, 0x11, 0x3F, 0xC0, 0x36, 0x28, 0xDB, 0x20, 0x7A, 0x27, 0xD5, 0x74, 
0x7D, 0xA2, 0x0B, 0x8C, 0x03, 0x87, 0x6A, 0x02, 0x88, 0x77, 0xF9, 0xB0, 0xBE, 0xA3, 0xB6, 0x80, 
0xE6, 0x2B, 0x0C, 0x4D, 0x79, 0xBC, 0xD0, 0x99, 0x53, 0xB0, 0x35, 0x12, 0xC0, 0xA3, 0x06, 0x12, 
0x6A, 0xD2, 0xB9, 0xF3, 0x2D, 0x20, 0xD4, 0x34, 0x90, 0x6F, 0xD0, 0x60, 0x8D, 0x15, 0xC8, 0x3F, 
0x9A, 0xE9, 0x55, 0x30, 0xEF, 0x76, 0x84, 0x81, 0x59, 0x83, 0x5D, 0x34, 0xFB, 0xED, 0x27, 0x9C, 
0xB0, 0x43, 0xEE, 0xE8, 0x32, 0xF6, 0xB0, 0x6F, 0x13, 0x3D, 0x05, 0x3C, 0x6C, 0x50, 0x9D, 0x10, 
0x7C, 0x80, 0x3A, 0x68, 0x28, 0xEE, 0xDF, 0xA0, 0x70, 0xA0, 0x8B, 0x45, 0x21, 0x6F, 0xD8, 0x1F, 
0x42, 0xD6, 0x2C, 0x7B, 0x5E, 0x01, 0xA5, 0x15, 0x38, 0x1E, 0xE2, 0x81, 0x7C, 0xD5, 0x23, 0xB5, 
0x77, 0xE0, 0xBD, 0x15, 0x6B, 0xB0, 0x87, 0x2C, 0x72, 0x47, 0x97, 0xD0, 0x11, 0xDF, 0x9D, 0x7B, 
0xF1, 0xDA, 0x44, 0xAC, 0x77, 0xD0, 0x8A, 0x4A, 0xDA, 0x22, 0x77, 0x38, 0x23, 0x02, 0x68, 0x42, 
0x8A, 0x61, 0x19, 0x44, 0xE7, 0x53, 0x12, 0x35, 0xD7, 0x04, 0x4E, 0xD8, 0x21, 0x7F, 0x38, 0x43, 
0x25, 0x65, 0xB5, 0x5F, 0x1E, 0x05, 0xE1, 0xA5, 0x38, 0xF1, 0xF7, 0x86, 0x3D, 0xCD, 0x9A, 0xB5, 
0xA9, 0xC9, 0x3D, 0xB2, 0x82, 0x35, 0x51, 0xE8, 0x87, 0x9B, 0x63, 0xB8, 0x96, 0x75, 0xA4, 0x77, 
0xD0, 0x12, 0x85, 0x60, 0x3D, 0x79, 0xB7, 0x69, 0xE3, 0xD7, 0x4A, 0x13, 0xDA, 0x88, 0x30, 0xFE, 
0xAF, 0xB3, 0x18, 0x56, 0xA4, 0xE9, 0xA4, 0xCB, 0x89, 0x97, 0xC9, 0x1E, 0x5B, 0xA2, 0x32, 0x64, 
0xB5, 0x69, 0xFA, 0xC8, 0xFA, 0xF4, 0xF0, 0x62, 0xDC, 0x9B, 0xCB, 0x42, 0x43, 0x69, 0x32, 0x47, 
0xFE, 0xF0, 0x6A, 0x67, 0x21, 0xF1, 0xED, 0xC3, 0x87, 0x1E, 0x00, 0x9B, 0x26, 0x8A, 0x6E, 0xF5, 
0x1D, 0x43, 0x7B, 0x53, 0x41, 0xAA, 0x7A, 0xB5, 0x0A, 0xDC, 0xDA, 0xE1, 0xC6, 0xD8, 0x8D, 0x11, 
0xE2, 0xB7, 0x3D, 0x04, 0xF6, 0x69, 0xA8, 0xC4, 0x6C, 0x72, 0x47, 0x97, 0xFB, 0xE9, 0xE4, 0x0B, 
0x07, 0xBC, 0xA3, 0xB1, 0x79, 0xAB, 0xDC, 0xD2, 0xD8, 0xDB, 0xDE, 0xA0, 0xA1, 0x09, 0x67, 0x62, 
0xA4, 0xAE, 0x8C, 0xB7, 0x74, 0xEC, 0xD5, 0x8A, 0x52, 0x78, 0x78, 0x95, 0xD2, 0x94, 0x2F, 0xBE, 
0x9F, 0x86, 0x30, 0xA8, 0x25, 0x30, 0x1A, 0x40, 0x74, 0x33, 0x3E, 0xAB, 0xB2, 0x49, 0xA2, 0xB6, 
0x1F, 0xC1, 0x43, 0xE4, 0x9C, 0x35, 0x5E, 0x20, 0x77, 0x64, 0x05, 0x1D, 0xEA, 0xAB, 0x7F, 0xBB, 
0x6C, 0x20, 0xC9, 0x29, 0x1E, 0x2C, 0x28, 0x88, 0xDD, 0x4E, 0x93, 0x78, 0xCF, 0x5B, 0x4C, 0xB1, 
0x6B, 0xF3, 0x5B, 0xFD, 0x5E, 0x5F, 0x28, 0x0C, 0x74, 0x0F, 0xE8, 0x08, 0x0A, 0x42, 0x6B, 0x11, 
0x52, 0x6F, 0x4F, 0x34, 0x0D, 0x0E, 0xDB, 0xC2, 0xC2, 0x81, 0x75, 0x0A, 0x0F, 0xAD, 0x07, 0xB1, 
0xB8, 0xB3, 0x6A, 0x20, 0xFB, 0x5C, 0x1F, 0x18, 0xA8, 0xEA, 0xA6, 0x90, 0xC8, 0x92, 0x87, 0x1D, 
0x32, 0x1A, 0xCA, 0x43, 0x25, 0xD7, 0xE6, 0xEF, 0x3F, 0x0A, 0x06, 0xB5, 0x9C, 0x07, 0x0F, 0x02, 
0x14, 0x44, 0xEF, 0xA4, 0x48, 0xDC, 0x1C, 0xF1, 0xD4, 0x9A, 0xB5, 0x29, 0x01, 0xC2, 0xE5, 0xF1, 
0x62, 0x50, 0x4B, 0x9B, 0x73, 0x06, 0xB5, 0x84, 0x44, 0xBB, 0x1D, 0x0A, 0xCC, 0x6C, 0x98, 0xD4, 
0xA5, 0x09, 0xCC, 0x82, 0x87, 0x2D, 0x4A, 0x1A, 0x8A, 0x53, 0x59, 0x0A, 0x87, 0xD6, 0x82, 0x8A, 
0xA8, 0xD0, 0xC0, 0x0D, 0x03, 0x89, 0x5D, 0xDF, 0xFD, 0x03, 0xB1, 0x03, 0x89, 0xEB, 0xA3, 0x44, 
0x16, 0x13, 0x9E, 0xC8, 0xAF, 0x24, 0x6C, 0x72, 0xC7, 0x96, 0x83, 0x8C, 0x1D, 0x2D, 0x03, 0x37, 
0x0D, 0xE0, 0x1D, 0x20, 0xF0, 0xF0, 0xE1, 0xAE, 0xA0, 0x20, 0x3A, 0x9F, 0x22, 0x79, 0x7D, 0xD4, 
0x9B, 0xBB, 0x41, 0x41, 0xFE, 0xE1, 0x0C, 0xD6, 0x64, 0x2E, 0xC8, 0xA8, 0x8A, 0x3C, 0x70, 0xAD, 
0x26, 0x80, 0x95, 0xC0, 0x8A, 0xD1, 0x2D, 0x14, 0x18, 0x05, 0x93, 0xE4, 0xE5, 0x71, 0xCC, 0x9C, 
0x87, 0xFD, 0x68, 0x1A, 0xAC, 0x89, 0x3C, 0x39, 0xFF, 0xFC, 0xFC, 0x5E, 0xB1, 0x04, 0xBC, 0x6B, 
0x20, 0x29, 0x57, 0x6E, 0x06, 0x59, 0x92, 0xAE, 0xE0, 0x40, 0xE2, 0xC6, 0x28, 0xB1, 0xBB, 0x29, 
0x4F, 0xBA, 0xDC, 0x89, 0x38, 0xE4, 0x3E, 0xBC, 0x52, 0xF5, 0x2B, 0x05, 0x5A, 0xF2, 0x9B, 0xC0, 
0x1D, 0x03, 0xC9, 0x89, 0x76, 0x29, 0xB8, 0x72, 0x74, 0x31, 0x02, 0x56, 0x3D, 0x9D, 0x89, 0xDA, 
0x56, 0xD8, 0x56, 0xD0, 0x50, 0x9C, 0x59, 0xA7, 0x18, 0x8C, 0xCD, 0xBF, 0x1D, 0x6F, 0x01, 0x6B, 
0xB5, 0x89, 0xD8, 0x79, 0x24, 0x4B, 0x60, 0x1F, 0x51, 0xCB, 0x57, 0xD0, 0xB9, 0x00, 0x0C, 0xCB, 
0x20, 0x75, 0x79, 0x82, 0xF0, 0x46, 0xC4, 0xA3, 0xCD, 0x6F, 0x91, 0x3D, 0xB6, 0x1C, 0x94, 0xCD, 
0x5F, 0x8F, 0x02, 0xC2, 0xF9, 0x66, 0xEE, 0x96, 0x8B, 0xC0, 0xBD, 0xFE, 0x97, 0xC3, 0xA0, 0x1B, 
0x01, 0xC4, 0x6E, 0x0D, 0x11, 0xBB, 0x9D, 0xF6, 0xF4, 0x08, 0x6D, 0x6A, 0xF2, 0x47, 0x56, 0x28, 
0xF7, 0xC7, 0xCF, 0xDF, 0x0A, 0xF3, 0xC0, 0xEB, 0x35, 0x06, 0x40, 0xF4, 0xD1, 0xC5, 0xFE, 0x97, 
0x43, 0x83, 0xEE, 0x80, 0x0D, 0x05, 0xA1, 0xD5, 0x28, 0xC9, 0xB7, 0x27, 0x5A, 0x2E, 0xE6, 0xD4, 
0x5E, 0x53, 0x9A, 0xCC, 0x91, 0x7F, 0x78, 0x75, 0x50, 0xA2, 0xA8, 0x2F, 0x02, 0xB7, 0xC0, 0x15, 
0xC0, 0x06, 0x92, 0x88, 0xCE, 0xEE, 0x5F, 0x19, 0xAA, 0xC9, 0x83, 0x76, 0x68, 0x8E, 0xAD, 0xD6, 
0x5C, 0x94, 0x6D, 0x90, 0xBC, 0x3C, 0x4E, 0x24, 0x13, 0xF3, 0x68, 0xF3, 0x97, 0xC9, 0x3E, 0xB6, 
0x34, 0x28, 0xFB, 0xC5, 0xCA, 0xC0, 0xBF, 0x01, 0x39, 0x00, 0xA3, 0x2E, 0x9D, 0xCA, 0x39, 0x24, 
0x91, 0x75, 0x7F, 0xB1, 0x83, 0xCF, 0xB9, 0x29, 0xA7, 0x0A, 0xA2, 0x73, 0x29, 0xE2, 0xEF, 0x0D, 
0x7B, 0x73, 0x37, 0x18, 0x9A, 0xFC, 0xE1, 0x8C, 0xF8, 0xF9, 0x3B, 0x89, 0x90, 0xEB, 0x3D, 0xE6, 
0x80, 0x97, 0x01, 0x38, 0x73, 0x6E, 0xCB, 0x46, 0xED, 0x2B, 0x48, 0x16, 0xF1, 0x33, 0x7E, 0x71, 
0xED, 0x19, 0x8D, 0xEA, 0xAD, 0x34, 0xA1, 0xB5, 0x28, 0xA9, 0xB7, 0xF6, 0x60, 0x96, 0x4C, 0x6F, 
0xAD, 0x3F, 0x59, 0xA6, 0x3C, 0x5A, 0x92, 0x8D, 0xDF, 0xED, 0x46, 0x72, 0x29, 0x4D, 0x79, 0xB8, 
0x24, 0x3B, 0x6F, 0x7A, 0x87, 0x6F, 0x00, 0xD7, 0x6A, 0x7F, 0x84, 0xDC, 0x1A, 0xAB, 0x02, 0xF0, 
0xCF, 0xC0, 0x0F, 0x30, 0x78, 0x99, 0xCD, 0x85, 0xEC, 0x8A, 0x41, 0xE2, 0xEA, 0x18, 0x51, 0x2F, 
0x9E, 0xCE, 0xEA, 0x3D, 0x66, 0x21, 0xCC, 0xF0, 0x6B, 0xFB, 0x3A, 0x52, 0xFD, 0x4E, 0xD4, 0x26, 
0xF3, 0xE9, 0x39, 0xAC, 0x89, 0x7C, 0xAF, 0xC2, 0xF0, 0x36, 0x10, 0x8E, 0x37, 0x3D, 0x0F, 0x32, 
0x06, 0x9C, 0xF9, 0x46, 0xED, 0xEF, 0x73, 0x48, 0x0A, 0xF7, 0x40, 0xD0, 0xAA, 0xC3, 0x47, 0xEF, 
0x26, 0x25, 0x24, 0xBD, 0x0D, 0xCD, 0xA0, 0x1C, 0x85, 0x59, 0x32, 0x31, 0x8A, 0x1D, 0x5C, 0xA5, 
0x50, 0xF3, 0xC8, 0x8E, 0xF6, 0x71, 0x9E, 0x3A, 0xF5, 0x03, 0xF7, 0xED, 0x94, 0x57, 0x0B, 0x48, 
0xFE, 0xFC, 0x60, 0x9C, 0x73, 0x4D, 0x0C, 0x1A, 0x33, 0x17, 0x26, 0xFD, 0xD6, 0x1E, 0x6F, 0x9E, 
0xCE, 0x9D, 0xA0, 0xDA, 0xBC, 0x7A, 0x8F, 0x12, 0x92, 0x77, 0xFA, 0xFD, 0x9D, 0xAB, 0x7C, 0xE6, 
0x1C, 0xD5, 0xA6, 0xF5, 0x22, 0x81, 0x98, 0xA4, 0x92, 0xEF, 0x6D, 0x47, 0x38, 0xCA, 0xBB, 0xA7, 
0x73, 0x70, 0xF1, 0x4D, 0xE0, 0x6B, 0xC0, 0x96, 0x3C, 0x72, 0x3B, 0xB5, 0xB9, 0x5B, 0xC8, 0xE1, 
0x05, 0x7D, 0x9E, 0x19, 0x37, 0x80, 0x92, 0x34, 0x97, 0x09, 0x8F, 0x81, 0x55, 0x03, 0x8A, 0x22, 
0xF0, 0x55, 0xE0, 0xCE, 0xF6, 0x0F, 0xB6, 0x0A, 0xC0, 0x95, 0xCC, 0xF3, 0xC8, 0xE1, 0x05, 0x03, 
0x01, 0x55, 0x51, 0xDE, 0x42, 0x4B, 0x06, 0x17, 0x2F, 0x03, 0x2F, 0x00, 0xF7, 0x65, 0x51, 0x6C, 
0x54, 0xAB, 0x79, 0xE4, 0xE4, 0x88, 0xD5, 0xA0, 0x4B, 0xFE, 0x00, 0x60, 0x05, 0xF8, 0x73, 0x1A, 
0xB8, 0x7A, 0xEE, 0x17, 0x80, 0x2B, 0xA1, 0x97, 0x90, 0x9E, 0xE0, 0x2F, 0x74, 0x75, 0xD4, 0xDB, 
0x92, 0xBA, 0x6C, 0xEB, 0xE5, 0x84, 0x1D, 0xAC, 0xB1, 0x42, 0xF5, 0xFB, 0x7D, 0xBA, 0x7A, 0x33, 
0xD8, 0x68, 0x64, 0xE0, 0xFD, 0xFA, 0x36, 0x6E, 0x37, 0x11, 0x6A, 0x72, 0x73, 0x16, 0xF8, 0x32, 
0x92, 0xA6, 0xFD, 0x31, 0x7F, 0xB8, 0xD7, 0x38, 0x31, 0x1B, 0xA7, 0x6C, 0x34, 0x34, 0xB3, 0x95, 
0x86, 0x4A, 0xDC, 0x96, 0xA0, 0xA9, 0x1B, 0xA3, 0x18, 0x5E, 0x26, 0x60, 0x3D, 0xA2, 0xCE, 0x89, 
0x56, 0xBA, 0xDD, 0x1D, 0xF3, 0x06, 0xF0, 0xA7, 0xC8, 0xEA, 0xD7, 0xCE, 0xF5, 0x6B, 0x78, 0xAB, 
0x9B, 0xB6, 0xF2, 0xC7, 0x91, 0xF3, 0x01, 0x3A, 0x4A, 0x5F, 0xD6, 0x0C, 0xAA, 0xA2, 0x30, 0x37, 
0x22, 0xD5, 0x84, 0xDA, 0x0D, 0xA7, 0xBF, 0x60, 0x68, 0xC9, 0x27, 0x67, 0x1B, 0xBD, 0xB6, 0xCB, 
0x5B, 0x14, 0x10, 0x9C, 0x98, 0xDD, 0x3C, 0x5B, 0x6F, 0x63, 0x64, 0x90, 0xA4, 0x87, 0xCF, 0x01, 
0x0D, 0x33, 0xE8, 0x36, 0xAF, 0x8D, 0x08, 0x21, 0x09, 0xFC, 0x01, 0xF0, 0x73, 0xF8, 0x91, 0xEE, 
0x4E, 0x81, 0x37, 0xA7, 0x4E, 0x0F, 0x72, 0x8F, 0x76, 0x82, 0xCE, 0xDC, 0x41, 0x15, 0x44, 0x7B, 
0xFC, 0x3A, 0x90, 0x6F, 0x96, 0xBE, 0xD8, 0x6B, 0xEE, 0xE8, 0x03, 0xC0, 0x5F, 0x02, 0xDF, 0x17, 
0x00, 0x05, 0xBB, 0x11, 0x2F, 0x01, 0x3F, 0x0D, 0xCC, 0x75, 0x97, 0x3B, 0xDA, 0xC5, 0x2D, 0xE0, 
0xB7, 0x08, 0x74, 0xE9, 0x72, 0xD7, 0xE0, 0x75, 0x24, 0x77, 0xF4, 0x9C, 0x97, 0x2F, 0xB7, 0x16, 
0x80, 0x2B, 0xC1, 0xD7, 0x80, 0x5F, 0x43, 0x8E, 0xF8, 0xFB, 0x00, 0x3B, 0xE3, 0x16, 0xC2, 0xD1, 
0x79, 0xC0, 0x53, 0xFA, 0x7A, 0x6F, 0xD1, 0xAB, 0xCF, 0xDF, 0x82, 0xD3, 0xB3, 0x20, 0x21, 0x2C, 
0x19, 0x24, 0xA5, 0xE5, 0xE0, 0x79, 0x4C, 0x83, 0xC5, 0x02, 0x42, 0xFE, 0x3F, 0xD2, 0xC6, 0xC9, 
0x4A, 0xDE, 0xB7, 0x80, 0x8B, 0x10, 0x34, 0xA2, 0x86, 0x36, 0x10, 0xF3, 0x74, 0x77, 0xA5, 0x37, 
0xF3, 0x0F, 0xEF, 0x03, 0xBF, 0x41, 0x9B, 0xA7, 0x67, 0x40, 0xBB, 0x09, 0x9A, 0x44, 0x08, 0x0E, 
0x62, 0xDF, 0xAE, 0x22, 0x47, 0x57, 0xFD, 0x7F, 0xEF, 0x09, 0x0B, 0x08, 0xF9, 0x5F, 0x01, 0xCA, 
0xED, 0x9E, 0x29, 0xD6, 0x7E, 0x12, 0x04, 0x11, 0x42, 0x05, 0x19, 0x6C, 0xEE, 0x21, 0x59, 0x16, 
0x7B, 0x3E, 0x47, 0xD8, 0x25, 0xA8, 0xE9, 0xFC, 0xE7, 0xE8, 0x80, 0x7C, 0xE8, 0x34, 0x45, 0x99, 
0xDB, 0x13, 0xDE, 0x44, 0xC6, 0x85, 0x6F, 0xA3, 0x9F, 0x09, 0x9F, 0x06, 0x03, 0x6F, 0x20, 0xA9, 
0xFD, 0x5F, 0x00, 0xEC, 0x4E, 0x4F, 0xD3, 0xEB, 0x3C, 0x0D, 0x88, 0x3B, 0x26, 0x5C, 0x03, 0xFE, 
0x07, 0x39, 0xB2, 0x63, 0x96, 0x07, 0xFF, 0x28, 0x43, 0x1B, 0xF1, 0xED, 0x7C, 0x11, 0x59, 0x41, 
0x0C, 0xE8, 0x28, 0x43, 0xA8, 0xB7, 0x8E, 0x6A, 0x2B, 0xFD, 0x11, 0x24, 0xF9, 0xC7, 0x6E, 0x3B, 
0x3B, 0xD8, 0x2B, 0x56, 0x81, 0xBF, 0x42, 0xD4, 0xCE, 0x65, 0x20, 0xE0, 0xC3, 0x3C, 0xEB, 0xE1, 
0xBA, 0x2D, 0x9E, 0x41, 0xCE, 0x4F, 0x39, 0xD6, 0xD3, 0xE7, 0x07, 0x0B, 0x8D, 0xC4, 0x72, 0x7E, 
0x09, 0xF1, 0x10, 0xE7, 0x07, 0xE7, 0x38, 0xDB, 0x7A, 0xB8, 0x0E, 0xBC, 0x8F, 0x20, 0x8E, 0xA8, 
0xD3, 0x48, 0x4A, 0xB4, 0xDD, 0x8C, 0x0C, 0xB2, 0x4E, 0xFE, 0x65, 0xD0, 0x97, 0x40, 0xF5, 0xF4, 
0x9C, 0x79, 0x3F, 0x8F, 0x34, 0x4F, 0x01, 0x9F, 0x01, 0x7E, 0x16, 0xC9, 0xC8, 0xBB, 0xDB, 0xD4, 
0x52, 0x11, 0x89, 0x93, 0xFA, 0x33, 0xE0, 0x5F, 0x80, 0x9C, 0x1F, 0xE7, 0xCA, 0xFB, 0xA7, 0x22, 
0x5C, 0x41, 0x4C, 0x21, 0x07, 0x42, 0x3C, 0x8B, 0xA4, 0x6A, 0x1C, 0x74, 0x41, 0x94, 0x90, 0x05, 
0xF4, 0xAF, 0x02, 0x2F, 0x80, 0x71, 0x0F, 0x9C, 0x9E, 0x9F, 0x25, 0x5F, 0x83, 0xFF, 0x3A, 0xDA, 
0x55, 0x4B, 0x33, 0x48, 0xE2, 0xEA, 0x67, 0x90, 0xB9, 0x43, 0xDA, 0xF7, 0x77, 0xB7, 0x87, 0x0D, 
0xE0, 0x02, 0xB2, 0x82, 0xF5, 0x22, 0x12, 0xA6, 0xD9, 0x53, 0x75, 0xB3, 0x13, 0xFA, 0x37, 0x48, 
0xBA, 0x82, 0xD8, 0x83, 0xA4, 0x70, 0xFF, 0x5C, 0xF5, 0xE7, 0x0C, 0xCD, 0x57, 0xE6, 0xFC, 0x44, 
0x19, 0xB1, 0xE0, 0xCE, 0x21, 0xA4, 0xBF, 0x8C, 0x6C, 0x1D, 0xF2, 0x9D, 0xF8, 0x1A, 0xFA, 0x6F, 
0xA5, 0xB8, 0xAA, 0x29, 0x0E, 0x3C, 0x8A, 0x08, 0xE1, 0x7B, 0x10, 0xF5, 0x34, 0x49, 0x47, 0xA7, 
0x36, 0xB5, 0x85, 0x22, 0x12, 0x74, 0xF0, 0x2D, 0x24, 0x22, 0xFC, 0x1C, 0x70, 0x9D, 0x5A, 0xB8, 
0x60, 0x9F, 0x88, 0xAF, 0x21, 0x58, 0x33, 0x71, 0xEB, 0x80, 0x3D, 0x8B, 0x08, 0xE1, 0x09, 0x24, 
0xA9, 0xE9, 0x41, 0x24, 0xB5, 0x63, 0x1C, 0x49, 0xA9, 0xD3, 0x6E, 0x59, 0x35, 0xD2, 0xC2, 0xF3, 
0xC0, 0x32, 0xB2, 0x07, 0xE2, 0x2D, 0xC4, 0x55, 0xFC, 0x3A, 0xE2, 0x46, 0xC8, 0x02, 0x7D, 0x27, 
0xBD, 0x1E, 0x83, 0x63, 0xA7, 0x9F, 0x3D, 0x55, 0x2D, 0x8E, 0x0E, 0x21, 0xBE, 0xA5, 0x19, 0xE4, 
0x0C, 0xAE, 0x23, 0xC8, 0x8A, 0xDC, 0xE1, 0xEA, 0xFF, 0xE2, 0x48, 0xB6, 0xF7, 0x18, 0x6E, 0xB2, 
0x29, 0x0B, 0x69, 0xC1, 0x6B, 0xC8, 0xF6, 0x9F, 0x39, 0xE0, 0x06, 0x92, 0x05, 0xE0, 0x0A, 0x42, 
0xFE, 0x1C, 0xB0, 0x0E, 0xDA, 0x06, 0x15, 0x28, 0xE9, 0xF5, 0xF8, 0x3F, 0x41, 0xF6, 0x35, 0x26, 
0x80, 0x30, 0xFE, 0xDB, 0x00, 0x00, 0x00, 0x25, 0x74, 0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 0x65, 
0x3A, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x00, 0x32, 0x30, 0x32, 0x30, 0x2D, 0x30, 0x39, 0x2D, 
0x31, 0x30, 0x54, 0x31, 0x35, 0x3A, 0x32, 0x38, 0x3A, 0x35, 0x32, 0x2B, 0x30, 0x30, 0x3A, 0x30, 
0x30, 0x41, 0x9D, 0x84, 0x71, 0x00, 0x00, 0x00, 0x25, 0x74, 0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 
0x65, 0x3A, 0x6D, 0x6F, 0x64, 0x69, 0x66, 0x79, 0x00, 0x32, 0x30, 0x32, 0x30, 0x2D, 0x30, 0x39, 
0x2D, 0x31, 0x30, 0x54, 0x31, 0x35, 0x3A, 0x32, 0x38, 0x3A, 0x35, 0x32, 0x2B, 0x30, 0x30, 0x3A, 
0x30, 0x30, 0x30, 0xC0, 0x3C, 0xCD, 0x00, 0x00, 0x00, 0x46, 0x74, 0x45, 0x58, 0x74, 0x73, 0x6F, 
0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x00, 0x49, 0x6D, 0x61, 0x67, 0x65, 0x4D, 0x61, 0x67, 0x69, 
0x63, 0x6B, 0x20, 0x36, 0x2E, 0x37, 0x2E, 0x38, 0x2D, 0x39, 0x20, 0x32, 0x30, 0x31, 0x34, 0x2D, 
0x30, 0x35, 0x2D, 0x31, 0x32, 0x20, 0x51, 0x31, 0x36, 0x20, 0x68, 0x74, 0x74, 0x70, 0x3A, 0x2F, 
0x2F, 0x77, 0x77, 0x77, 0x2E, 0x69, 0x6D, 0x61, 0x67, 0x65, 0x6D, 0x61, 0x67, 0x69, 0x63, 0x6B, 
0x2E, 0x6F, 0x72, 0x67, 0xDC, 0x86, 0xED, 0x00, 0x00, 0x00, 0x00, 0x18, 0x74, 0x45, 0x58, 0x74, 
0x54, 0x68, 0x75, 0x6D, 0x62, 0x3A, 0x3A, 0x44, 0x6F, 0x63, 0x75, 0x6D, 0x65, 0x6E, 0x74, 0x3A, 
0x3A, 0x50, 0x61, 0x67, 0x65, 0x73, 0x00, 0x31, 0xA7, 0xFF, 0xBB, 0x2F, 0x00, 0x00, 0x00, 0x18, 
0x74, 0x45, 0x58, 0x74, 0x54, 0x68, 0x75, 0x6D, 0x62, 0x3A, 0x3A, 0x49, 0x6D, 0x61, 0x67, 0x65, 
0x3A, 0x3A, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x00, 0x31, 0x39, 0x32, 0x0F, 0x00, 0x72, 0x85, 
0x00, 0x00, 0x00, 0x17, 0x74, 0x45, 0x58, 0x74, 0x54, 0x68, 0x75, 0x6D, 0x62, 0x3A, 0x3A, 0x49, 
0x6D, 0x61, 0x67, 0x65, 0x3A, 0x3A, 0x57, 0x69, 0x64, 0x74, 0x68, 0x00, 0x31, 0x39, 0x32, 0xD3, 
0xAC, 0x21, 0x08, 0x00, 0x00, 0x00, 0x19, 0x74, 0x45, 0x58, 0x74, 0x54, 0x68, 0x75, 0x6D, 0x62, 
0x3A, 0x3A, 0x4D, 0x69, 0x6D, 0x65, 0x74, 0x79, 0x70, 0x65, 0x00, 0x69, 0x6D, 0x61, 0x67, 0x65, 
0x2F, 0x70, 0x6E, 0x67, 0x3F, 0xB2, 0x56, 0x4E, 0x00, 0x00, 0x00, 0x17, 0x74, 0x45, 0x58, 0x74, 
0x54, 0x68, 0x75, 0x6D, 0x62, 0x3A, 0x3A, 0x4D, 0x54, 0x69, 0x6D, 0x65, 0x00, 0x31, 0x35, 0x39, 
0x39, 0x37, 0x35, 0x31, 0x37, 0x33, 0x32, 0x1C, 0x60, 0xE1, 0x99, 0x00, 0x00, 0x00, 0x0F, 0x74, 
0x45, 0x58, 0x74, 0x54, 0x68, 0x75, 0x6D, 0x62, 0x3A, 0x3A, 0x53, 0x69, 0x7A, 0x65, 0x00, 0x30, 
0x42, 0x42, 0x94, 0xA2, 0x3E, 0xEC, 0x00, 0x00, 0x00, 0x56, 0x74, 0x45, 0x58, 0x74, 0x54, 0x68, 
0x75, 0x6D, 0x62, 0x3A, 0x3A, 0x55, 0x52, 0x49, 0x00, 0x66, 0x69, 0x6C, 0x65, 0x3A, 0x2F, 0x2F, 
0x2F, 0x6D, 0x6E, 0x74, 0x6C, 0x6F, 0x67, 0x2F, 0x66, 0x61, 0x76, 0x69, 0x63, 0x6F, 0x6E, 0x73, 
0x2F, 0x32, 0x30, 0x32, 0x30, 0x2D, 0x30, 0x39, 0x2D, 0x31, 0x30, 0x2F, 0x61, 0x65, 0x33, 0x65, 
0x31, 0x64, 0x63, 0x38, 0x34, 0x32, 0x37, 0x36, 0x32, 0x63, 0x62, 0x61, 0x61, 0x63, 0x39, 0x35, 
0x30, 0x63, 0x39, 0x30, 0x39, 0x36, 0x65, 0x35, 0x37, 0x38, 0x39, 0x36, 0x2E, 0x69, 0x63, 0x6F, 
0x2E, 0x70, 0x6E, 0x67, 0xFC, 0x53, 0x60, 0x4C, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4E, 0x44, 
0xAE, 0x42, 0x60, 0x82};

AsyncWebServer server(80);

extern bool find1;
extern bool find2;
extern bool find3;
extern bool beep1;
extern bool beep2;
extern bool beep3;
extern bool amberl;
extern bool amberr;
extern bool ambers1;
extern bool fancy1;
extern bool fancy2;
extern bool fancy3;
extern bool hazard;
extern bool engine;

void auth(AsyncWebServerRequest *request){
  if(!request->authenticate(http_username, http_password)){
    return request->requestAuthentication();
  }
}

String targetState(bool target){
  if (target)
    return "checked";
  
  return "";
}

String htmlProcessor(const String& var){
  if(var == "COMPONENTS"){
    String html = F("");
    html += "<h3>Find</h3>";
    html += "<button class=\"pushable\" onclick=\"trigger(this)\" data-target=\"find1\"><span class=\"front\">Silently</span></button>";
    html += "<button class=\"pushable dgr\" onclick=\"trigger(this)\" data-target=\"find2\"><span class=\"front\">Sound Once</span></button>";
    html += "<button class=\"pushable dgr\" onclick=\"trigger(this)\" data-target=\"find3\"><span class=\"front\">Sound Twice</span></button>";

    html += "<h3>Beeps</h3>";
    html += "<button class=\"pushable dgr\" onclick=\"trigger(this)\" data-target=\"beep1\"><span class=\"front\">Beep</span></button>";
    html += "<button class=\"pushable dgr\" onclick=\"trigger(this)\" data-target=\"beep2\"><span class=\"front\">Beep 2x</span></button>";
    html += "<button class=\"pushable dgr\" onclick=\"trigger(this)\" data-target=\"beep3\"><span class=\"front\">Beep 3x</span></button>";

    html += "<h3>Ambers</h3>";
    html += "<button class=\"pushable\" onclick=\"trigger(this)\" data-target=\"ambers1\"><span class=\"front\">Ambers 1x</span></button>";
    html += "<button class=\"pushable\" onclick=\"trigger(this)\" data-target=\"amberl\"><span class=\"front\">Amber L</span></button>";
    html += "<button class=\"pushable\" onclick=\"trigger(this)\" data-target=\"amberr\"><span class=\"front\">Amber R</span></button>";

    html += "<h3>Fancy</h3>";
    html += "<button class=\"pushable\" onclick=\"trigger(this)\" data-target=\"fancy1\"><span class=\"front\">Fancy 1</span></button>";
    html += "<button class=\"pushable\" onclick=\"trigger(this)\" data-target=\"fancy2\"><span class=\"front\">Fancy 2</span></button>";
    html += "<button class=\"pushable\" onclick=\"trigger(this)\" data-target=\"fancy3\"><span class=\"front\">Fancy 3</span></button>";

    html += "<h3>Loops</h3>";
    html += "<h4>Hazard</h4><label class=\"switch\"><input type=\"checkbox\" onchange=\"toggleCheckbox(this)\" data-target=\"hazard\" " + targetState(hazard) + "><span class=\"slider\"></span></label>";

    html += "<h3>Engine</h3>";
    html += "<label class=\"switch\"><input type=\"checkbox\" onchange=\"toggleCheckbox(this)\" data-target=\"engine\" " + targetState(engine) + "><span class=\"slider\"></span></label>";

    // reboot button
    html += "<br/>";
    html += "<button class=\"pushable dgr\" onclick=\"reboot()\"><span class=\"front\">Reboot</span></button>";

    return html;
  }

  if (var == "") {
    return String("%");
  }

  return String();
}

void routes() {
  // Route for root / web page
  server.on("/", HTTP_GET, [](AsyncWebServerRequest *request) {
    auth(request);
    request->send_P(200, "text/html", index_html, htmlProcessor);
  });

  // server favicon.ico from PROGMEM
  server.on("/favicon.ico", HTTP_GET, [](AsyncWebServerRequest *request) {
    AsyncWebServerResponse *res = request->beginResponse_P(200, "image/x-icon", favicon_ico, sizeof(favicon_ico));
    res->addHeader("Content-Length", String(sizeof(favicon_ico)));
    request->send(res);
  });

  server.on("/trig", HTTP_GET, [](AsyncWebServerRequest *request) {
    auth(request);

    if (!request->hasParam("target"))
      return request->send(400, "text/plain", "No target specified");
    
    String target = request->getParam("target")->value();

    if (target.equals("beep1")) {
      beep1 = true;
      Serial.println("DEBUG: BEEP 1x");
    }

    if (target.equals("beep2")) {
      beep2 = true;
      Serial.println("DEBUG: BEEP 2x");
    }

    if (target.equals("beep3")) {
      beep3 = true;
      Serial.println("DEBUG: BEEP 3x");
    }

    if (target.equals("amberl")) {
      amberl = true;
      Serial.println("DEBUG: AMBER L");
    }

    if (target.equals("amberr")) {
      amberr = true;
      Serial.println("DEBUG: AMBER R");
    }

    if (target.equals("ambers1")) {
      ambers1 = true;
      Serial.println("DEBUG: AMBER BOTH 1x");
    }

    if (target.equals("find1")) {
      find1 = true;
      Serial.println("DEBUG: FIND STYLE 1");
    }

    if (target.equals("find2")) {
      find2 = true;
      Serial.println("DEBUG: FIND STYLE 2");
    }

    if (target.equals("find3")) {
      find3 = true;
      Serial.println("DEBUG: FIND STYLE 3");
    }

    if (target.equals("fancy1")) {
      fancy1 = true;
      Serial.println("DEBUG: FANCY 1");
    }

    if (target.equals("fancy2")) {
      fancy2 = true;
      Serial.println("DEBUG: FANCY 2");
    }

    if (target.equals("fancy3")) {
      fancy3 = true;
      Serial.println("DEBUG: FANCY 3");
    }

    request->send(200, "text/html", "Done");
  });

  server.on("/update", HTTP_GET, [](AsyncWebServerRequest *request) {
    auth(request);
    if ((!request->hasParam(PARAM_INPUT_1)) || (!request->hasParam(PARAM_INPUT_2))) {
      return;
    }
    String target = request->getParam(PARAM_INPUT_1)->value();
    String state = request->getParam(PARAM_INPUT_2)->value();

    if (target == "hazard") {
      hazard = state.toInt();
    }

    if (target == "engine") {
      engine = state.toInt();
    }

    Serial.print("TARGET: ");
    Serial.print(target);
    Serial.print(" - Set to: ");
    Serial.println(state);
    request->send(200, "text/plain", "OK");
  });

  server.on("/getstate", HTTP_GET, [](AsyncWebServerRequest *request) {
    auth(request);
    if (!request->hasParam("target"))
      return request->send(400, "text/plain", "No target specified");
    
    String target = request->getParam("target")->value();
    
    if (target == "hazard") {
      request->send(200, "text/plain", String(hazard));
    }
  });

  server.on("/change-password", HTTP_GET, [](AsyncWebServerRequest *request) {
    auth(request);
    LittleFS.begin();
    // replace content of file path "/wifi_ssid" in littlefs
    LittleFS.remove("/wifi_ssid");
    File ssidFile = LittleFS.open("/wifi_ssid", "w");
    ssidFile.println("sutelobike");
    ssidFile.close();

    LittleFS.end();
    Serial.println("SSID CHANGED!");
  });

  server.on("/reboot", HTTP_POST, [](AsyncWebServerRequest *request) {
    auth(request);
    ESP.restart();
  });
}

void startServer() {
  routes();
  server.begin();
}
